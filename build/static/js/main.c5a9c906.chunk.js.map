{"version":3,"sources":["state/toasts/index.js","state/hooks.js","utils/getRpcUrl.js","utils/web3React.js","utils/wallet.js","hooks/useAuth.js","components/landing/header/Navbar.js","Assets/common/b1.png","Assets/common/b2.png","Assets/common/b3.png","Assets/common/b4.png","Assets/common/m1.png","Assets/common/m2.png","Assets/common/m3.png","Assets/common/m4.png","Assets/common/ml1.png","Assets/common/ml2.png","Assets/common/ml3.png","Assets/common/ml4.png","Assets/common/w1.png","Assets/common/w2.png","Assets/common/w3.png","Assets/common/w4.png","Assets/common/l1.png","components/landing/Landing.js","components/merch/CartData.js","images/tshirt.jpg","components/merch/Merch.js","components/nftperks/NftPerks.js","utils/web3.js","hooks/useWeb3.js","utils/Environment.js","utils/contractHelpers.js","hooks/distributeMultiple.js","components/mint/Mint.js","App.js","redux/action/ProductActios.js","redux/Reducers/productReducers.js","redux/Reducers/Index.js","redux/store.js","index.js"],"names":["toastsSlice","createSlice","name","initialState","data","reducers","push","state","action","payload","toastIndex","findIndex","toast","id","splice","unshift","remove","clear","actions","toastTypes","nodes","process","getNodeUrl","randomIndex","random","length","ConnectorNames","rpcUrl","chainId","parseInt","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","connectorsByName","setupNetwork","a","provider","window","ethereum","request","method","params","toString","console","error","useAuth","useWeb3React","activate","deactivate","toastError","dispatch","useDispatch","useMemo","pushToast","title","description","kebabCase","type","toastInfo","toastSuccess","toastWarning","removeToast","clearToast","useToast","login","useCallback","connectorID","connector","UnsupportedChainIdError","walletConnectProvider","undefined","message","logout","Navbar","account","useState","setShowNav","useEffect","log","innerWidth","handleResize","wallletconnect","localStorage","setItem","connectMetaMask","className","to","src","alt","class","tabindex","onClick","Landing","CartData","qty","productname","detail","price","size","Merch","NftPerks","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","web3NoAccount","getWeb3NoAccount","useWeb3","library","refEth","useRef","web3","setweb3","current","Environment","disperser","base_url","metaSkeletonContract","getContract","abi","address","eth","Contract","DistributeMultiple","contract","tokenAbi","tokenContract","environment","DisperseMulti","tokenaddy","walletArr","userPrices","elem","utils","toWei","JSON","stringify","toNumber","methods","distributeMultiple","send","from","on","tx","transactionHash","catch","nfts","Mint","stake","setStake","stakefilter","setfilterdata","totaltoken","settotalstake","tokenAddy","settokenAddy","amount","setamount","getStakedNfts","datestr","Date","unixTimestamp","moment","unix","config","url","headers","query","variables","axios","then","response","dumb","newarr","stakes","index","startTime","makepayment","datas","totalper","weightage","valarr","parseFloat","amountPercentageTotal","amount1","BigNumber","multipliedBy","pow","style","fontSize","Table","striped","bordered","hover","responsive","map","key","toUTCString","endTime","color","onChange","e","target","value","App","getcartItem","useSelector","allProducts","products","fetchProducts","React","exact","path","component","cart","combineReducers","existItem","find","x","concat","alert","filter","item","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getLibrary","document","getElementById"],"mappings":"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","file":"static/js/main.c5a9c906.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  data: [],\n}\n\nexport const toastsSlice = createSlice({\n  name: 'toasts',\n  initialState,\n  reducers: {\n    push: (state, action) => {\n      const { payload } = action\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\n\n      // If id already matches remove it before adding it to the top of the stack\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n\n      state.data.unshift(payload)\n    },\n    remove: (state, action) => {\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\n\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n    },\n    clear: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { clear, remove, push } = toastsSlice.actions\n\nexport default toastsSlice.reducer\n","import { useMemo } from 'react'\nimport { kebabCase } from 'lodash'\n// import { Toast, toastTypes } from '@babefinance/uikit'\nimport { useDispatch } from 'react-redux'\nimport {\n    push as pushToast,\n    remove as removeToast,\n    clear as clearToast,\n} from './actions'\n\nconst toastTypes = {\n    SUCCESS: \"string\",\n    DANGER: \"string\",\n    WARNING: \"string\",\n    INFO: \"string\",\n};\n\n\nexport const useToast = () => {\n    const dispatch = useDispatch()\n    const helpers = useMemo(() => {\n        const push = (toast) => dispatch(pushToast(toast))\n\n        return {\n            toastError: (title, description) => {\n                return push({ id: kebabCase(title), type: toastTypes.DANGER, title, description })\n            },\n            toastInfo: (title, description) => {\n                return push({ id: kebabCase(title), type: toastTypes.INFO, title, description })\n            },\n            toastSuccess: (title, description) => {\n                return push({ id: kebabCase(title), type: toastTypes.SUCCESS, title, description })\n            },\n            toastWarning: (title, description) => {\n                return push({ id: kebabCase(title), type: toastTypes.WARNING, title, description })\n            },\n            push,\n            remove: (id) => dispatch(removeToast(id)),\n            clear: () => dispatch(clearToast()),\n        }\n    }, [dispatch])\n\n    return helpers\n}","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport getNodeUrl from './getRpcUrl'\n\nconst ConnectorNames = {\n    Injected: \"injected\",\n    WalletConnect: \"walletconnect\",\n    BSC: \"bsc\"\n}\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n    rpc: { [chainId]: rpcUrl },\n    bridge: 'https://bridge.walletconnect.org',\n    qrcode: true,\n    pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName = {\n    [ConnectorNames.Injected]: injected,\n    [ConnectorNames.WalletConnect]: walletconnect,\n    [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider) => {\n    return provider\n}\n","// Set of helper functions to facilitate wallet setup\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\n export const setupNetwork = async () => {\n  const provider = (window).ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    // const chainId = 4\n    try {\n      await provider.request({\n        method: 'wallet_switchEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            // chainName: 'Rinkeby Smart Chain TestNet',\n            // nativeCurrency: {\n            //   name: 'ETH',\n            //   symbol: 'ETH',\n            //   decimals: 18,\n            // },\n            // rpcUrls: [nodes],\n            // blockExplorerUrls: ['https://rinkeby.etherscan.com/'],\n\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress,\n  tokenSymbol,\n  tokenDecimals,\n  tokenImage,\n) => {\n  const tokenAdded = await (window).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { useToast } from '../state/hooks'\nimport { connectorsByName } from '../utils/web3React'\nimport { setupNetwork } from '../utils/wallet'\n\nconst useAuth = () => {\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  \n  const login = useCallback((connectorID) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n      // alert(\"all goog\")\n      activate(connector, async (error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          const hasSetup = await setupNetwork()\n          if (hasSetup) {\n            activate(connector)\n          }\n        } else {\n          connector.walletConnectProvider = undefined\n          toastError(error.name, error.message)\n        }\n      })\n    } else {\n      toastError(\"Can't find connector\", 'The connector config is wrong')\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return { login, logout: deactivate }\n}\n\nexport default useAuth;\n","import React, { useEffect, useState } from 'react';\nimport './navbar.scss';\nimport { HashLink } from 'react-router-hash-link';\nimport { Link } from 'react-router-dom';\nimport { useWeb3React } from '@web3-react/core';\nimport useAuth from '../../../hooks/useAuth';\nimport { NavLink } from 'react-router-dom';\nconst Navbar = () => {\n    const { login, logout } = useAuth();\n    const { account } = useWeb3React();\n    const [shownav, setShowNav] = useState(false)\n\n\n    const [open, Close] = useState(true);\n\n    const connectMetamask = () => {\n        localStorage.setItem('connectorId', 'injected');\n        if (account) {\n            logout();\n        } else {\n            login('injected');\n        }\n    };\n\n\n\n    const showModal = () => {\n        window.$(\"#exampleModal\").modal('show');\n    }\n    const disconnect = () => {\n        logout()\n    }\n\n    const Disconnect = async () => {\n        logout();\n        localStorage.setItem('connectorId', '');\n    };\n    const handleResize = () => {\n        console.log(\"window.innerWidth\", window?.innerWidth)\n        if (window.innerWidth < 768) {\n            setShowNav(false)\n        } else {\n            setShowNav(true)\n        }\n    }\n    useEffect(() => {\n        handleResize();\n    }, [])\n    const wallletconnect = () => {\n        localStorage.setItem('connectorId', 'walletconnect');\n        if (account) {\n          logout();\n        } else {\n          login('walletconnect');\n        }\n      };\n      const connectMetaMask = () => {\n        console.log(\"$$$\")\n        if (account) {\n          logout()\n        } else {\n          login(\"injected\")\n        }\n      } \n\n      useEffect(()=>{\n        login(\"injected\");\n      },[])\n\n    return (\n        <section className=\"main-navbar\">\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-sm-11 mx-auto\">\n                        {/* mobile */}\n                        {/* <nav className=\"navbar d-block d-lg-none w-100 queryFlex navbar-expand-lg \">\n                            <a className=\"navbar-brand\" href=\"/\">\n                                <img src=\"hash-max-assets/header/logo.png\" className=\"img-fluid logoIMg\" alt=\"\" />\n                            </a>\n                            <button onClick={() => Close(true)} className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                                <div class=\"style-bar\"></div>\n                                <div class=\"style-bar\"></div>\n                                <div class=\"style-bar\"></div>\n                            </button>\n                            {open && <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                                <ul className=\"navbar-nav mr-auto\">\n                                    <li className=\"nav-item\">\n                                        <HashLink className=\"nav-link my-1 \" to=\"#collection\">\n                                            Collection\n                                        </HashLink>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <HashLink className=\"nav-link my-1 \" to=\"#roadmap\">\n                                            Roadmap\n                                        </HashLink>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <HashLink className=\"nav-link my-1 \" to=\"#team\">\n                                            Staking\n                                        </HashLink>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <NavLink className=\"nav-link my-1 \" to=\"/merch\" >\n                                            Merch\n                                        </NavLink>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <NavLink className=\"nav-link my-1 \" to=\"/nftperks\">\n                                            NFT perks\n                                        </NavLink>\n                                    </li>\n                                </ul>\n                                <form className=\"form-inline my-2 my-lg-0\">\n                                    <a className=\"\">\n                                        <img src=\"hash-max-assets/header/twitter-icon.svg\" className=\"img-fluid socialHeight\" alt=\"\" />\n                                    </a>\n                                    <a className=\"\">\n                                        <img src=\"hash-max-assets/header/discord-icon.svg\" className=\"img-fluid socialHeight\" alt=\"\" />\n                                    </a>\n                                    <a className=\"\">\n                                        <img src=\"hash-max-assets/header/instagram-icon.svg\" className=\"img-fluid socialHeight\" alt=\"\" />\n                                    </a>\n                                </form>\n                            </div>\n                            }\n                        </nav> */}\n                        {/* mobile */}\n                        {/* laptop */}\n                        <nav className=\"navbar   navbar-expand-lg \">\n                            <Link className=\"navbar-brand\" to=\"/\">\n                                <img src=\"logo.svg\" className=\"img-fluid logoIMg\" alt=\"\" />\n                            </Link>\n                            {/* onClick={() => setShowNav(!shownav)}  */}\n                            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                                <div class=\"style-bar\"></div>\n                                <div class=\"style-bar\"></div>\n                                <div class=\"style-bar\"></div>\n                            </button>\n                            {/* {shownav && */}\n                            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\n                                <ul className=\"navbar-nav mx-auto\">\n                                    {/* <li className=\"nav-item\">\n                                        <HashLink className=\"nav-link \" to=\"/#collection\">\n                                            Our Roadmap\n                                        </HashLink>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <HashLink className=\"nav-link \" to=\"/#roadmap\">\n                                            FAQS\n                                        </HashLink>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <HashLink className=\"nav-link \" to=\"/#team\">\n                                           About US\n                                        </HashLink>\n                                    </li> */}\n                                    {/* <li className=\"nav-item\">\n                                        <Link exact className=\"nav-link \" to=\"/merching\"  >\n                                            Merch\n                                        </Link>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <Link className=\"nav-link \" to=\"/nftperks\">\n                                            NFT perks\n                                        </Link>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <Link className=\"nav-link \" to=\"/minting\">\n                                            Mint\n                                        </Link>\n                                    </li> */}\n\n                                </ul>\n                                <div className=\"form-inline my-2 my-lg-0\">\n                                <button className='btn-common' data-toggle=\"modal\" data-target=\"#exampleModalmerchf\">{account ? \"Disconnect Wallet\" : \"Connect Wallet\" }</button>\n                                 \n                                   \n                                </div>\n                            </div>\n                            {/* } */}\n                        </nav>\n                        {/* laptop */}\n                    </div>\n                </div>\n\n            </div>\n\n            {/* //wallet connect modal */}\n            <div class=\"modal fade\" id=\"exampleModalmerchf\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog modal-dialog-centered modal-dialog-wallet\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h4 class=\"modal-title text-white text-center text-uppercase w-100\" id=\"exampleModalLabel\">{account ? \"Disconnect Wallet\" : \"Connect Wallet\" }</h4>\n                            <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-label=\"Close\"><img src=\"assets/errorSign.svg\" alt=\"\" /></button>\n                        </div>\n                        <div class=\"modal-body p-4 text-center\">\n                            <button className='w-100 ' type='button' >\n                                <div className=\"row pb-2 pt-1\">\n                                    {account ?\n                                        <div className='outerdivs-meta' onClick={connectMetaMask}>\n                                            <div className=\"col-12 text-end\">\n                                                <img src=\"merch/MetaMask_Fox.png\" alt=\"metamasklogo\" className='img-fluid' />\n                                            </div>\n                                            <div className=\"col-12 my-auto p-0 text-start\">\n                                                <p>Disconnect Metamask</p>\n                                            </div>\n                                        </div>\n                                        :\n                                        <div className='outerdivs-meta' onClick={connectMetaMask}>\n                                            <div className=\"col-12 text-end\">\n                                                <img src=\"merch/MetaMask_Fox.png\" alt=\"metamasklogo\" className='img-fluid' />\n                                            </div>\n                                            <div className=\"col-12 my-auto p-0 text-start\">\n                                                <p>Connect Metamask</p>\n                                            </div>\n                                        </div>\n                                    }\n                                </div>\n                            </button>\n                            <button className='w-100 mt-3' type='button' >\n                                <div className=\"row pb-2\">\n                                    {account ?\n                                        <div className='walletconnect' onClick={wallletconnect}>\n                                            <div className=\"col-12 text-end \">\n                                                <img src=\"merch/walletconnect.png\" className='img-fluid' alt=\"walletconnect logo\" />\n                                            </div>\n                                            <div className=\"col-12 my-auto p-0 text-start\">\n                                                <p>Wallet Disconnect</p>\n                                            </div>\n                                        </div>\n                                        :\n                                        <div className='walletconnect' onClick={wallletconnect}>\n                                            <div className=\"col-12 text-end \">\n                                                <img src=\"merch/walletconnect.png\" className='img-fluid' alt=\"walletconnect logo\" />\n                                            </div>\n                                            <div className=\"col-12 my-auto p-0 text-start\">\n                                                <p>WalletConnect</p>\n                                            </div>\n                                        </div>\n                                    }\n                                </div>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/b1.f237ec17.png\";","export default __webpack_public_path__ + \"static/media/b2.03048e64.png\";","export default __webpack_public_path__ + \"static/media/b3.28211939.png\";","export default __webpack_public_path__ + \"static/media/b4.81577fb4.png\";","export default __webpack_public_path__ + \"static/media/m1.f3a5659d.png\";","export default __webpack_public_path__ + \"static/media/m2.7e46c6c9.png\";","export default __webpack_public_path__ + \"static/media/m3.694a7b6a.png\";","export default __webpack_public_path__ + \"static/media/m4.e7ab2fbb.png\";","export default __webpack_public_path__ + \"static/media/ml1.de9f588f.png\";","export default __webpack_public_path__ + \"static/media/ml2.68e8e1bc.png\";","export default __webpack_public_path__ + \"static/media/ml3.c74ac8c3.png\";","export default __webpack_public_path__ + \"static/media/ml4.f575aa4d.png\";","export default __webpack_public_path__ + \"static/media/w1.405a1ca7.png\";","export default __webpack_public_path__ + \"static/media/w2.513cb696.png\";","export default __webpack_public_path__ + \"static/media/w3.36ce8fdf.png\";","export default __webpack_public_path__ + \"static/media/w4.425d2455.png\";","export default __webpack_public_path__ + \"static/media/l1.32e12b7c.png\";","// import logo from './logo.svg';\nimport '../../App.scss';\nimport Navbar from './header/Navbar.js';\nimport Banner from './main-banner/Banner.js';\nimport About from './aboutus/About.js';\nimport Features from './features/Features.js';\nimport Roadmap from './roadmap/Roadmap.js';\nimport Faqs from './faqs/Faqs.js';\nimport Footer from './footer/Footer.js';\nimport Community from './robotcollection/RobotCollection.js';\nimport Xenoverse from './unlishtherobot/UnlishRobot.js';\nimport Common from '../common/Common';\n\n\nfunction Landing() {\n  return (\n    <>\n       <Navbar/>\n       <Banner/>\n       <Xenoverse/>\n       <Community/>\n       <About/>\n       {/* <Features/> */}\n       <Common/>\n       <Roadmap/>\n       {/* <Faqs/> */}\n       <Footer/>\n    </>\n  );\n}\n\nexport default Landing;","const CartData=[\n    {\n        id:1,\n        src:'../images/tshirt.jpg',\n        qty:1,\n        productname:'T SHIRT',\n        detail:'Sed ut perspiciatis unde omnis iste natus voluptatem accusantium doloremque totam rem aperiam sint occaecat cupidatat non proident, sunt in culpa qui officia.',\n        price:'299.00',\n        size: ''\n    },\n    {\n        id:2,\n        src:'../images/tshirt.jpg',\n        qty:1,\n        productname:'HOODIE',\n        detail:'Sed ut perspiciatis unde omnis iste natus voluptatem accusantium doloremque totam rem aperiam sint occaecat cupidatat non proident, sunt in culpa qui officia.',\n        price:'340.00',\n        size: ''\n    },\n    {\n        id:3,\n        src:'../images/tshirt.jpg',\n        qty:1,\n        productname:'CAP',\n        detail:'Sed ut perspiciatis unde omnis iste natus voluptatem accusantium doloremque totam rem aperiam sint occaecat cupidatat non proident, sunt in culpa qui officia.',\n        price:'499.00',\n        size: ''\n    },\n];\nexport default CartData;","export default __webpack_public_path__ + \"static/media/tshirt.74380aad.jpg\";","import React, { useEffect, useState } from 'react'\n// import { Link } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\n// import { NavLink } from 'react-router-dom'\nimport Footer from '../landing/footer/Footer'\nimport { useWeb3React } from '@web3-react/core'\nimport useAuth from '../../hooks/useAuth'\nimport './merch.scss'\nimport Category from './ListitemArray';\nimport CartData from './CartData'\nimport { addToCart, setproducts } from '../../redux/action/ProductActios'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Navbar from '../landing/header/Navbar'\nimport Lock from '../../images/tshirt.jpg'\n\nfunction Merch() {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const modalButton = () => {\n        window.$(\"#exampleModalbuynow\").modal('hide');\n        history.push('/checkout');\n    }\n    const { account } = useWeb3React();\n    console.log(\"account\", account)\n    const { login, logout } = useAuth();\n    const connectMetaMask = () => {\n        console.log(\"connect wallet \")\n        if (account) {\n            logout()\n        } else {\n            login(\"injected\")\n        }\n    }\n    // console.log(\"account\", account)\n    const wallletconnect = () => {\n        localStorage.setItem('connectorId', 'walletconnect');\n        if (account) {\n            logout();\n        } else {\n            login('walletconnect');\n        }\n    };\n    const [category, setCategory] = useState('Small');\n    const [modalOBJ, setModalOBJ] = useState({});\n    console.log(\"modalobj\", modalOBJ)\n    const BuyNow = (pid) => {\n        let dumObj = CartData.find((i) => i.id === pid);\n        setModalOBJ(dumObj);\n    }\n    const categoryupdate = (elem) => {\n        // console.log(\"category we he hdre \",elem)\n        setCategory(elem)\n        setModalOBJ({...modalOBJ , size :elem });\n    }\n\n    useEffect(() => {\n        if(account){\n            window.$(\"#exampleModalmerch\").modal('hide');\n        }else{\n            window.$(\"#exampleModalmerch\").modal('show');  \n        }\n    }, [account])\n    \n    const allproduct = CartData.map((elem) => {\n        const { id, src, productname, detail, price } = elem;\n        return (\n            <div className=\"col-md-4 \" key={id}>\n                <div className=\"cardo mb-md-0 mb-5\">\n                    <div className=\"img-container-div\">\n                        <img src={Lock} alt=\"metamasklogo\" className='img-fluid' />\n                    </div>\n                    <div className=\"text-center mt-4\">\n                        <h4 className='font-weight-bold text-white mb-2'>Driven trading <span className='common'>{productname}</span> </h4>\n                        {/* <p className='text-secondary'>{detail}</p> */}\n                        <button className='btn-common-2 mt-3  w-75' data-toggle=\"modal\" onClick={() => BuyNow(elem.id)} data-target=\"#exampleModalbuynow\">BUY NOW</button>\n                    </div>\n                </div>\n            </div>\n        );\n    });\n\n    return (\n        <>\n            <div className=\"merch-main\">\n                <Navbar/>\n                <div className=\"container-fluid pb-5\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-11 mx-auto\">\n                            <div className=\"heading-div text-center mt-5\">\n                                <h2>Driven trading <span className='common'>merch</span> </h2>\n                                {/* <p className='py-2'>Sed ut perspiciatis unde omnis iste natus voluptatem accusantium <br /> doloremque totam rem aperiam.</p> */}\n                            </div>\n                            <div className=\"row ptb my-5\">\n                                {allproduct ? allproduct : null}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {/* //wallet connect modal */}\n            <div class=\"modal fade\"  id=\"exampleModalmerch\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog modal-dialog-centered modal-dialog-wallet\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h4 class=\"modal-title text-white text-center text-uppercase w-100\" id=\"exampleModalLabel\">Connect <span className='common'>Wallet</span> </h4>\n                            <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-label=\"Close\"><img src=\"assets/errorSign.svg\" alt=\"\" /></button>\n                        </div>\n                        <div class=\"modal-body p-4 text-center\">\n                            <button className='w-100 ' type='button' >\n                                <div className=\"row pb-2 pt-1\">\n                                    {account ?\n                                        <div className='outerdivs-meta' onClick={connectMetaMask}>\n                                            <div className=\"col-12 text-end\">\n                                                <img src=\"merch/MetaMask_Fox.png\" alt=\"metamasklogo\" className='img-fluid' />\n                                            </div>\n                                            <div className=\"col-12 my-auto p-0 text-start\">\n                                                <p>Disconnect Metamask</p>\n                                            </div>\n                                        </div>\n                                        :\n                                        <div className='outerdivs-meta' onClick={connectMetaMask}>\n                                            <div className=\"col-12 text-end\">\n                                                <img src=\"merch/MetaMask_Fox.png\" alt=\"metamasklogo\" className='img-fluid' />\n                                            </div>\n                                            <div className=\"col-12 my-auto p-0 text-start\">\n                                                <p>Connect Metamask</p>\n                                            </div>\n                                        </div>\n                                    }\n                                </div>\n                            </button>\n                            <button className='w-100 mt-3' type='button' >\n                                <div className=\"row pb-2\">\n                                    {account ?\n                                        <div className='walletconnect' onClick={wallletconnect}>\n                                            <div className=\"col-12 text-end \">\n                                                <img src=\"merch/walletconnect.png\" className='img-fluid' alt=\"walletconnect logo\" />\n                                            </div>\n                                            <div className=\"col-12 my-auto p-0 text-start\">\n                                                <p>Wallet Disconnect</p>\n                                            </div>\n                                        </div>\n                                        :\n                                        <div className='walletconnect' onClick={wallletconnect}>\n                                            <div className=\"col-12 text-end \">\n                                                <img src=\"merch/walletconnect.png\" className='img-fluid' alt=\"walletconnect logo\" />\n                                            </div>\n                                            <div className=\"col-12 my-auto p-0 text-start\">\n                                                <p>WalletConnect</p>\n                                            </div>\n                                        </div>\n                                    }\n                                </div>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {/* //buy now modal */}\n            {/* {account ? */}\n                <div class=\"modal fade\" id=\"exampleModalbuynow\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                    <div class=\"modal-dialog modal-dialog-centered\">\n                        <div class=\"modal-content\">\n                            {/* <div class=\"modal-header\">\n                                  <h4 class=\"modal-title text-white text-center text-uppercase w-100\" id=\"exampleModalLabel\">Connect <span className='common'>Wallet</span> </h4>\n                                  <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-label=\"Close\"><img src=\"assets/errorSign.svg\" alt=\"\" /></button>\n                              </div> */}\n                            <div class=\"modal-body p-4 text-center\">\n                                <div className=\"row pb-2 pt-1\">\n                                    <div className=\"col-md-6 pb-md-0 pb-4 text-end\">\n                                        <div className=\"imgDiv\">\n                                            {/* <img src={modalOBJ?.src} alt=\"Picture\" className='img-fluid' /> */}\n                                            <img src={Lock} alt=\"Picture\" className='img-fluid' />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6 my-auto p-0 text-left\">\n                                        <h4 className='font-weight-bold text-white mb-3'>Driven trading <span className='common'>{modalOBJ?.productname}</span> </h4>\n                                        {/* <p className='text-secondary'>{modalOBJ?.detail}</p> */}\n                                        <div className=\"row my-4\">\n                                            <div className=\"col-12 pl-0 text-left\">\n                                                <p>Product Price</p>\n                                                <h6 className='skdj'>{modalOBJ?.price}</h6>\n                                                <div class=\"form-group main-text-feild-head \">\n                                                    <label For=\"name\">Choose Category</label>\n                                                    <div className=\"button-list\">\n                                                        <div className=\"dropdown buttons-list-all\">\n                                                            <button className=\"button-listing\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                                                <p>{category ? category : null}</p>\n                                                                {/* <img src=\"\\bluemoon-nft\\popular-sellers\\dropdown-icon.svg\" className=\"img-fluid main-same-img\" /> */}\n                                                            </button>\n                                                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                                                                {Category.map((elem) => {\n                                                                    return (\n                                                                        <a className=\"dropdown-item\" onClick={() => {\n                                                                            categoryupdate(elem.item?elem.item:'Small');\n                                                                        }}>{elem.item}</a>\n                                                                    )\n                                                                }\n                                                                )}\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div onClick={modalButton}>\n                                            <button type='button' className='btn-common-2  w-100' onClick={() => dispatch(addToCart(modalOBJ))}>Add to cart</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/* : null} */}\n            <div className=\"fotter-hide-top\">\n                <Footer />\n            </div>\n        </>\n    )\n}\n\nexport default Merch","import React from 'react'\nimport Footer from '../landing/footer/Footer'\nimport Navbar from '../landing/header/Navbar'\nimport './nftperks.scss'\n\nfunction NftPerks() {\n    return (\n        <>\n            <div className=\"merch-main nftperks-main\">\n                <Navbar/>\n                <div className=\"container-fluid pb-5\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-12 p-0 mx-auto\">\n                            <div className=\"heading-div text-center mt-5\">\n                                <h2>Driven NFT <span className='common'>Holder Perks </span> </h2> </div>\n                            <div className=\"row ptb my-5 \">\n                                <div className=\"col-lg-1\">\n                                </div>\n                                <div className=\"col-lg-2  col-md-6  pt-lg-0 pt-5\">\n                                    <div className=\"cardo mb-md-0 mb-5\">\n                                        <div className=\"img-container-div\">\n                                            <img src=\"merch/car.jpg\" alt=\"metamasklogo\" className='img-fluid' />\n                                        </div>\n                                        <div className=\"text-center mt-4\">\n                                            <h4 className='font-weight-bold text-white text-uppercase mb-2'><span className='common'>720S NFT Wrapped McLaren</span> </h4>\n                                            <button className='btn-common-2 mt-5 text-uppercase w-75' data-toggle=\"modal\" data-target=\"#exampleModalconfrim\">Claim</button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-lg-2 col-md-6  pt-lg-0 pt-5\">\n                                    <div className=\"cardo mb-md-0 mb-5\">\n                                        <div className=\"img-container-div\">\n                                            <img src=\"merch/rolex.jpg\" alt=\"metamasklogo\" className='img-fluid' />\n                                        </div>\n                                        <div className=\"text-center mt-4\">\n                                            <h4 className='font-weight-bold text-white text-uppercase mb-2'><span className='common'>Rolex Watch</span> </h4>\n                                            <button className='btn-common-2 mt-5 text-uppercase w-75' data-toggle=\"modal\" data-target=\"#exampleModalconfrim\">Claim</button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-lg-2 col-md-6 pt-lg-0 pt-5\">\n                                    <div className=\"cardo mb-md-0 mb-5\">\n                                        <div className=\"img-container-div\">\n                                            <img src=\"merch/wolfpackmastermind.png\" alt=\"metamasklogo\" className='img-fluid' />\n                                        </div>\n                                        <div className=\"text-center mt-4\">\n                                            <h4 className='font-weight-bold text-white text-uppercase mb-2'><span className='common'>Wolfpack Mastermind Tickers</span> </h4>\n                                            <button className='btn-common-2 mt-5 text-uppercase w-75' data-toggle=\"modal\" data-target=\"#exampleModalconfrim\">Claim</button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-lg-2 col-md-6  pt-lg-0 pt-5\">\n                                    <div className=\"cardo mb-md-0 mb-5\">\n                                        <div className=\"img-container-div\">\n                                            <img src=\"merch/canvasnft.png\" alt=\"metamasklogo\" className='img-fluid' />\n                                        </div>\n                                        <div className=\"text-center mt-4\">\n                                            <h4 className='font-weight-bold text-white text-uppercase mb-2'><span className='common'>NFT Canvas</span> </h4>\n                                            <button className='btn-common-2 mt-5 text-uppercase w-75' data-toggle=\"modal\" data-target=\"#exampleModalconfrim\">Claim</button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-lg-2 col-md-6  pt-lg-0 pt-5\">\n                                    <div className=\"cardo mb-md-0 mb-5\">\n                                        <div className=\"img-container-div\">\n                                            <img src=\"merch/DRIVENVERSE.png\" alt=\"metamasklogo\" className='img-fluid' />\n                                        </div>\n                                        <div className=\"text-center mt-4\">\n                                            <h4 className='font-weight-bold text-white text-uppercase mb-2'><span className='common'>DRIVENVERSE Launch Party Tickets</span> </h4>\n                                            <button className='btn-common-2 mt-5 text-uppercase w-75' data-toggle=\"modal\" data-target=\"#exampleModalconfrim\">Claim</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n            {/* <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModalconfrim\">\n                Launch demo modal\n            </button> */}\n\n            <>\n                {/* //buy now modal */}\n                <div class=\"modal fade\" id=\"exampleModalconfrim\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                    <div class=\"modal-dialog modal-dialog-centered\">\n                        <div class=\"modal-content\">\n                            {/* <div class=\"modal-header\">\n                                <h4 class=\"modal-title text-white text-center text-uppercase w-100\" id=\"exampleModalLabel\">Connect <span className='common'>Wallet</span> </h4>\n                                <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-label=\"Close\"><img src=\"assets/errorSign.svg\" alt=\"\" /></button>\n                            </div> */}\n                            <div class=\"modal-body p-sm-4 p-4 text-center\">\n                                <div className=\"row pb-2 pt-1\">\n\n                                    <div className=\"col-md-12 my-auto p-0 text-left\">\n                                        <h4 className='font-weight-bold text-white mb-3 ml-3'>Contact <span className='common'>Information</span> </h4>\n                                        <div className=\"row my-4\">\n                                            <div className=\"input-pack-container \">\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-6 d-flex flex-column\">\n                                                        <label for=\"exampleInputEmail1\">full name</label>\n                                                        <input type=\"text\" placeholder='Enter your full name' />\n                                                    </div>\n                                                    <div className=\"col-md-6 d-flex flex-column\">\n                                                        <label for=\"exampleInputEmail1\">email address</label>\n                                                        <input type=\"text\" placeholder='Enter your email address' />\n                                                    </div>\n                                                    <div className=\"col-md-6 d-flex flex-column\">\n                                                        <label for=\"exampleInputEmail1\">Phone Number</label>\n                                                        <input type=\"number\" placeholder='enter Phone Number' />\n                                                    </div>\n                                                    <div className=\"col-md-6 d-flex flex-column\">\n                                                        <label for=\"exampleInputEmail1\">shipping address</label>\n                                                        <input type=\"text\" placeholder='Enter shipping address' />\n                                                    </div>\n                                                    <div className=\"col-md-12 d-flex flex-column\">\n                                                        <label for=\"exampleInputEmail1\">NFT number</label>\n                                                        <input type=\"number\" placeholder='Enter NFT number' />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"text-center\">\n                                            <button className='btn-common-2  w-50  ' data-dismiss=\"modal\">Confirm</button>\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </>\n            <div className=\"fotter-hide-top\">\n                <Footer />\n            </div>\n        </>\n    )\n}\n\nexport default NftPerks","import Web3 from 'web3'\nimport getRpcUrl from './getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 })\nconst web3NoAccount = new Web3(httpProvider)\n\nconst getWeb3NoAccount = () => {\n  return web3NoAccount\n}\n\nexport { getWeb3NoAccount }\nexport default web3NoAccount","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { getWeb3NoAccount } from '../utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n","let Environment = {\n  disperser: \"0x513724460fa9f5A691E95889e6d8103EE97e45Eb\",\n  base_url: \"https://api.quecko.com/v1\",\n  // metaSkeletonContract: \"0xf41CCd39c65438Bb000d1e67EbDBE25Da14A4252\",\n  \n  // Osama bhai contract \n  metaSkeletonContract: \"0xbb04aAFd02b6CAfB86D163861899aEA34EBdCB46\"\n};\n\nexport default Environment;","import web3NoAccount from './web3'\nimport skeletonAbi from \"./skeletonAbi.json\"\nimport tokenAbi from './tokenAbi.json'\n\nconst getContract = (abi, address, web3) => {\n    const _web3 = web3 ?? web3NoAccount;\n    return new _web3.eth.Contract(abi, address)\n}\n\nexport const tokenContract = (address, web3) => {\n    return getContract(tokenAbi, address, web3)\n}\n\n// export const StakeContract = (address, web3) => {\n//     return getContract(stakeAbi, address, web3)\n// }\n\n// export const ApproveContract = (address, web3) => {\n//     return getContract(approveAbi, address, web3)\n// }\n\n\nexport const SkeletonContract = (address, web3) => {\n    return getContract(skeletonAbi, address, web3)\n}","import { useCallback } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useWeb3 from \"./useWeb3\";\nimport environment from \"../utils/Environment\";\nimport { tokenContract } from \"../utils/contractHelpers\";\nimport BigNumber from \"bignumber.js\";\n\nexport const DistributeMultiple = () => {\n  const { account } = useWeb3React();\n  const web3 = useWeb3();\n  const tokenAddress = environment.disperser;\n  const contract = tokenContract(tokenAddress, web3);\n  const DisperseMulti = useCallback(\n    async (tokenaddy, walletArr, userPrices) => {\n      try {\n         \n\n        // for (let elem = 0; elem < userPrices.length; elem++) {\n        //   userPrices[elem] = web3.utils.toWei(\n        //     JSON.stringify(userPrices[elem]), 'ether'\n        //   )\n         \n        // }\n\n         for (let elem = 0; elem < userPrices.length; elem++) {\n          userPrices[elem] = web3.utils.toWei(\n            JSON.stringify(userPrices[elem].toNumber()), 'ether'\n          )\n         \n        }\n\n        console.log(\"heree i m\", userPrices)\n        const nfts = await contract.methods\n          .distributeMultiple(tokenaddy,walletArr, userPrices)\n          .send({\n            from: account,\n         \n          })\n          .on(\"transactionHash\", (tx) => {\n            return tx.transactionHash;\n          })\n          .catch((error) => {\n            console.log(\"erorrrr in catcccchhh\", error);\n            return false;\n          });\n        return nfts;\n      } catch (error) {\n        console.log(\"error::::\", error);\n        return false;\n      }\n    },\n    [account, contract]\n  );\n\n  return { DisperseMulti: DisperseMulti };\n};\n\nexport default DistributeMultiple;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from \"react\";\nimport \"./mint.scss\";\nimport axios from \"axios\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useAuth from \"../../hooks/useAuth\";\nimport Navbar from \"../landing/header/Navbar\";\nimport { Table } from 'react-bootstrap';\nimport { DistributeMultiple } from '../../hooks/distributeMultiple'\nimport moment from 'moment'\nimport BigNumber from 'bignumber.js';\nconst Mint = () => {\n  const { account } = useWeb3React();\n  const [date, setDate] = useState('');\n  const [dateend, setDateEnd] = useState('');\n  const { login, logout } = useAuth();\n  const [stake, setStake] = useState([]);\n  const [stakefilter, setfilterdata] = useState([]);\n  const [totaltoken, settotalstake] = useState(0);\n  const [dataof, setdataof] = useState([0]);\n  const { DisperseMulti } = DistributeMultiple();\n  const [tokenAddy, settokenAddy] = useState('');\n  const [amount, setamount] = useState('');\n  useEffect(async () => {\n    getStakedNfts();\n  }, []);\n  var datestr = new Date();\n  var unixTimestamp = moment(datestr, 'YYYY.MM.DD').unix();\n  console.log(unixTimestamp, \"hereeee\");\n  const handlePresaleEndDate = (e) => {\n\n    console.log(\"break\", date)\n    setDateEnd(e.target.value)\n    const epochStartTime = new Date(date).getTime() / 1000.0;\n    const epochEndTime = new Date(dateend).getTime() / 1000.0;\n    console.log(\"epochStartTime\", epochStartTime)\n    console.log(\"epochEndTime\", epochEndTime);\n    let filerdata = [];\n\n    for (let index = 0; index < stake.length; index++) {\n      if (stake[index].startTime >= epochStartTime && stake[index].endTime <= epochEndTime) {\n        console.log(\"im  here\", stake[index]);\n        filerdata.push(stake[index]);\n        console.log(filerdata);\n\n        // setfilterdata(filerdata)\n      }\n\n    }\n\n  }\n\n  const handleChangeDate = (e) => {\n    setDate(e.target.value)\n\n\n  }\n\n\n  const getStakedNfts = () => {\n    let account0 = \"0xD653672D46F04bBAea506b1e126580f790e3ff25\";\n    var data = JSON.stringify({\n      query: `{\n        stakes(first:1000){\n            id\n            account\n            amount\n            amountPercentageTotal\n            duration\n            startTime\n            endTime\n            dividendAmount\n        } \n      }`,\n      variables: {},\n    });\n\n    var config = {\n      method: \"post\",\n      url: \"https://api.thegraph.com/subgraphs/name/wasif28/defi-kings\",\n      // url: \"https://api.thegraph.com/subgraphs/name/ammarsjw/staking-metaskeletons-rinkeby\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        var dumb = 0;\n        let stak = response.data?.data?.stakes;\n        var newarr = [];\n        for (let index = 0; index < response.data?.data?.stakes.length; index++) {\n          if (unixTimestamp - response.data?.data?.stakes[index].startTime <= 1209600) {\n            newarr.push(response.data?.data?.stakes[index])\n          }\n\n        }\n        setfilterdata(newarr)\n        console.log(newarr, \"i m there too\")\n        setStake(newarr);\n        for (let index = 0; index < newarr.length; index++) {\n          dumb = dumb + parseInt(newarr[index].amount);\n\n        }\n        settotalstake(dumb);\n        console.log(\"heeee ,,,,,,,\", totaltoken)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n\n  };\n\n  const makepayment = async () => {\n\n    console.log(\"tokenaddy\", tokenAddy);\n    console.log(\"amount\", amount);\n    var datas = [];\n    var dumb = 0;\n    var totalper=0;\n    var weightage=0;\n    console.log(\"here it is\", stakefilter)\n    for (const elem of stakefilter) {\n      datas.push(elem?.account)\n    }\n    console.log(\"filterdata\", datas)\n    var valarr = [];\n    var newarr = (amount / datas).length;\n\n    for (const elem of stakefilter) {\n      \n      totalper += parseFloat(elem.amountPercentageTotal);\n    }\n\n    console.log(\"percentagetoral\", totalper);\n\n    for (const elem of stakefilter) {\n      weightage =  parseFloat(elem.amountPercentageTotal/totalper)\n      let amount1= (parseInt(amount) * weightage)\n     valarr.push(new BigNumber(amount1).multipliedBy(new BigNumber(10).pow(18)))\n     dumb = dumb + amount1\n    }\n    console.log(\"here www\", valarr )\n  \n   let res= await DisperseMulti(tokenAddy,datas, valarr)\n  }\n\n\n  return (\n    <>\n      <ToastContainer />\n      {/* {mainLoader && <Loader />} */}\n      <div className=\"brdr\"></div>\n      <section className=\"main-banner-mint\" id=\"aboutus\">\n        <Navbar />\n        <div className=\"container p-0\">\n          < div className=\"row\">\n            <div className=\"col-md-12\" >\n              <div className=\"header\">\n                <h3>DEFI KINGS TRACKER  & BONUS PAY DASHBOARD</h3>\n              </div>\n            </div>\n\n            {/* <div className=\"row\"> */}\n            {/* <div className=\"col-lg-3\">\n              <button className=\"btn btn-set\">Add Funds</button>\n            </div> */}\n            {/* <div className=\"col-lg-3\">\n              <button className=\"btn btn-set\">Pay Now</button>\n            </div> */}\n            {/* <div className=\"col-lg-3\">\n              <button className=\"btn btn-set\">Set Auto Pay</button>\n            </div> */}\n            <div className=\"col-lg-4\">\n              <button className=\"btn btn-set\">Staked Token:  <span style={{ fontSize: '12px' }}>{totaltoken / 10 ** 9}  $DFK</span> </button>\n            </div>\n            {/* </div> */}\n          </div>\n          <div className=\"row\">\n            <div className=\"col-lg-12\">\n              <div className=\"stakedwallet\">\n                <h4>List of All Wallet Staked</h4>\n              </div>\n              <div className=\"Tableclr\">\n                <Table striped bordered hover responsive>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Wallet Address</th>\n                      <th>Amount</th>\n                      <th>Start Time</th>\n                      <th>End Time</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {stake?.map((elem, key) => {\n                      const { id } = elem;\n                      return (\n                        <tr index={key}>\n                          <td>{key + 1}</td>\n                          <td>{elem?.account}</td>\n                          <td>{elem?.amount / 10 ** 9}</td>\n                          <td>{new Date(elem.startTime * 1000).toUTCString()}</td>\n                          <td>{new Date(elem.endTime * 1000).toUTCString()}</td>\n                        </tr>\n                      )\n                    })\n                    }\n\n\n                  </tbody>\n                </Table>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-lg-7\">\n              <button className=\"btn btn-set\" data-toggle=\"modal\" data-target=\"#exampleModalmerchfdd\">Make payment to Wallets <span style={{ fontSize: \"12px\" }} > </span></button>\n            </div>\n            {/* <div className=\"col-lg-3\">\n              <button className=\"btn btn-set\">Pay All</button>\n            </div> */}\n            {/* <div class=\"col-lg-6\">\n              <div class=\"form-group\">\n                <label for=\"example\">Stake Start Time<span>*</span></label>\n                <br></br>\n                <div class=\"sd-container\">\n\n                  <input class=\"sd\"\n                    type=\"date\"\n                    value={date}\n                    onChange={handleChangeDate}\n                    id=\"party\" type=\"datetime-local\" name=\"partydate\"  ></input>\n                  <span class=\"open-button\">\n                    <button type=\"button\">📅</button>\n                  </span>\n\n                </div>\n              </div>\n            </div>\n            <div class=\"col-lg-6\">\n              <div class=\"form-group\">\n                <label for=\"example\">Stake End Time<span>*</span></label>\n                <br></br>\n                <div class=\"sd-container\">\n                  <input class=\"sd\"\n                    type=\"date\"\n                    value={dateend}\n                    onChange={handlePresaleEndDate}\n                    id=\"party\" type=\"datetime-local\" name=\"partydate\" ></input>\n                  <span class=\"open-button\">\n                    <button type=\"button\">📅</button>\n                  </span>\n\n                </div>\n              </div>\n            </div> */}\n          </div>\n          {/* <div className=\"row\">\n            <div className=\"col-lg-12\">\n\n              <div className=\"Tableclr\">\n                <Table striped bordered hover responsive>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Wallet Address</th>\n                      <th>Amount</th>\n                      <th>Start Time</th>\n                      <th>End Time</th>\n\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {stakefilter?.map((elem, key) => {\n                      const { id } = elem;\n                      return (\n                        <tr index={key}>\n                          <td>{key + 1}</td>\n                          <td>{elem?.account}</td>\n                          <td>{elem?.amount / 10 ** 9}</td>\n                          <td>{new Date(elem.startTime * 1000).toUTCString()}</td>\n                          <td>{new Date(elem.endTime * 1000).toUTCString()}</td>\n                        </tr>\n                      )\n                    })\n                    }\n\n\n                  </tbody>\n                </Table>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              <button className=\"btn btn-set\"  >Pay</button>\n            </div>\n\n          </div> */}\n\n          {/* //wallet connect modal */}\n          <div class=\"modal fade\" id=\"exampleModalmerchfdd\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-dialog-centered modal-dialog-wallet\">\n              <div class=\"modal-content\">\n                <h3 className=\"p-4 text-center\" style={{ color: 'white' }}>Set Token to Make Payment</h3>\n                <div class=\"modal-body p-4 text-center\">\n                  <button className='w-100 ' type='button' >\n                    <div className=\"row pb-2 pt-1\">\n                      <label>Enter Token address for Reward</label>\n                      <input type=\"text\" className=\"form-control\" style={{ color: '#000' }} onChange={(e) => settokenAddy(e.target.value)}  ></input>\n                      <label>Enter Amount to distribute all Address</label>\n                      <input type=\"text\" className=\"form-control\" style={{ color: '#000' }} onChange={(e) => setamount(e.target.value)}></input>\n                    </div>\n\n\n                  </button>\n\n\n                </div>\n                <button className=\"btn btn-success text-center\" onClick={makepayment}>Pay</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      {/* <Footer /> */}\n    </>\n  );\n\n}\n\nexport default Mint;\n","import React from 'react';\nimport './App.scss';\nimport Landing from './components/landing/Landing.js';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport Navbar from './components/landing/header/Navbar.js';\nimport Audit from \"./components/audit/Audit.js\";\nimport Support from \"./components/support/Support.js\";\nimport useEagerConnect from './hooks/useEagerConnect'\nimport Merch from './components/merch/Merch';\nimport Checkout from './components/checkout/Checkout';\nimport NftPerks from './components/nftperks/NftPerks';\nimport CartData from './components/merch/CartData';\nimport { setproducts } from './redux/action/ProductActios';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux'\nimport Mint from './components/mint/Mint';\nfunction App() {\n  const getcartItem=useSelector(state=>state.allProducts.products);\n  console.log('all product =======',getcartItem)\n  const dispatch=useDispatch();\n  const fetchProducts = ()=>{\n      dispatch(setproducts(CartData));\n  }\nReact.useEffect(() => {\nfetchProducts();\n},[CartData]);\n  // useEagerConnect()\n  return (\n    <>\n      <Router>\n        {/* <Navbar /> */}\n        {/* <Audit/> */}\n        <Switch>\n          <Route exact path='/' component={Mint} />\n          {/* <Route exact path='/audit' component={Audit} />\n          <Route exact path='/support' component={Support} />\n          <Route exact path='/checkout' component={Checkout} />\n          <Route exact path='/nftperks' component={NftPerks} />\n          <Route exact path='/merching' component={Merch} /> */}\n          <Route exact path='/minting' component={Mint} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","export const setproducts =(products)=>{\n    console.log(\"product we have here is \",products)\n    return{\n        type:\"SET_PRODUCTS\",\n        payload:products\n    }\n}\nexport const addToCart =(cartdata)=> {\n    // console.log(\"adddata\",cartdata);\n    return{\n        type:\"ADD_TO_CART\",\n        payload:cartdata\n    }\n}\nexport const removeFromCart=(id)=>{\n    return{  \n        type:\"REMOVE_FROM_CART\",\n        payload:id\n    }\n}\nexport const updateQuantity=(id , qty)=>{\n    // console.log('quantity actoin',id,qty)\n    return{\n        type:\"UPDATE_QUANTITY\",\n        qty,id\n    }\n}","const initialState={\n    products:[],\n    cart:[]\n}\nexport const productReducers = (state=initialState,{type,payload})=>{\n    console.log(\"payload in  produect\",payload)\n    switch(type){\n        case \"SET_PRODUCTS\":\n            return{...state,products:payload}\n        default:\n            return state;\n    }\n};\nexport const cartReducers = (state=initialState,{type ,payload,qty ,id})=>{\n\n    switch(type){\n            case \"ADD_TO_CART\":\n            console.log(\"reducers\",payload);\n            // console.log(\"reducers\",products);\n                const existItem=state.products.find(x => x.id === payload.id);\n                // console.log(\"exsisste itemss\",existItem)\n                if(existItem){\n                    alert('Item already added in cart');\n                }\n                else{\n                    return{\n                       ...state,\n                       products:state.products.concat(payload)\n                    }\n                }\n            case \"REMOVE_FROM_CART\" :\n                return{\n                    products:state.products.filter(id=>id.id !== payload),\n                }\n            case \"UPDATE_QUANTITY\":\n            //  console.log(\"reducers qty\",qty);\n            //  console.log(\"reducers id \",id);\n             return {\n                ...state,\n                 products:state.products.map((item)=>{\n                     console.log('items',item)\n                   return  item.id === id ? {...item, qty:qty}:item\n                 })\n             }\n        default:\n            return state;\n    }\n};\n","import {combineReducers} from 'redux';\nimport {productReducers,cartReducers} from './productReducers';\nconst reducers = combineReducers({\n    allProducts:productReducers,\n    cart:cartReducers\n});\nexport default reducers;","import {createStore} from 'redux';\n// import reducers from './Reducers/Index';\nimport reducers from './Reducers/Index.js';\nconst store=createStore(\n    reducers,\n    {},\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { getLibrary } from './utils/web3React'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}